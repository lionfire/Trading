@page "/bots"
@inherits ReactiveUI.Blazor.ReactiveInjectableComponentBase<BotsVM>

@using LionFire.Reactive.Persistence
@using LionFire.Trading.Automation
@using Microsoft.Extensions.DependencyInjection

<div class="pa-6">
    <ObservableDataView @ref=ItemsEditor
                        Data="ViewModel!.Data"
                        TKey="string"
                        TValue="BotEntity"
                        TValueVM="BotVM">
        <Columns>
            <PropertyColumn T="BotVM" TProperty="string" Property="x => x.Key" />
            <PropertyColumn T="BotVM" TProperty="string" Property="x => x.Value.Name" />
            <PropertyColumn T="BotVM" TProperty="string" Property="x => x.Value.Comments" />
            <TemplateColumn T="BotVM"
            >
                @* T="BotVM" *@
                <CellTemplate >
                    <div>Description:
                        @context.Item.Value.Description
                    <MudSwitch T="bool" >Enabled</MudSwitch>
                    </div>
                </CellTemplate>
            </TemplateColumn>
        </Columns>
    </ObservableDataView>
</div>

@code {
    [CascadingParameter(Name = "WorkspaceServices")]
    public IServiceProvider? WorkspaceServices { get; set; }

    [CascadingParameter(Name = "WorkspaceId")]
    public string? WorkspaceId { get; set; }

    ObservableDataView<string, BotEntity, BotVM>? ItemsEditor { get; set; }

    protected override void OnInitialized()
    {
        base.OnInitialized();
    }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        ViewModel!.Init(WorkspaceServices);
    }
}
