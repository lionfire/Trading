@page "/optimize/one-shot"
@inherits ReactiveInjectableComponentBase<OneShotOptimizeVM>

@rendermode InteractiveServer

@using LionFire.Blazor.Components.Terminal
@using MudBlazor.Components

@* This page is a quick UI for optimizing right from a Worker process' UI.  The long-term approach favors a FireLynx workbench that supports Optimize documents which can be saved/loaded.  *@

@* Toolbar: [Abort] [Optimize] *@
@* <MudToolBar Class="gap-6 d-flex flex-row justify-end pa-6"> *@
<MudPaper Class="gap-6 d-flex flex-row justify-end pa-6">

    @* <LionFire.Trading.Automation.Blazor.Infra.CpuChart/> *@

    @if (ViewModel!.IsRunning)
    {
        <MudProgressLinear Color="Color.Primary" Value="@ViewModel.Progress.Percent" />

        <MudSimpleTable>
            <tr>
                <td>Progress</td>
                <td>
                    @ViewModel.Progress.Percent
                </td>
            </tr>
            <tr>
                <td>Completed</td>
                <td>@ViewModel.Progress.Completed</td>
            </tr>
            <tr>
                <td>Queued</td>
                <td>@ViewModel.Progress.Queued</td>
            </tr>
            <tr>
                <td>Total</td>
                <td>@ViewModel.Progress.Total</td>
            </tr>
        </MudSimpleTable>

        <MudButton OnClick="@ViewModel!.Cancel" Color="Color.Error" Variant="@(ViewModel!.IsAborting ? Variant.Filled : Variant.Outlined)" Size="Size.Large">
            @if (ViewModel!.IsAborting)
            {
                <text>Aborting...</text>
            }
            else
            {
                <text>Abort</text>
            }
        </MudButton>
    }
    <MudButton OnClick="ViewModel.OnOptimize" Color="Color.Primary" Variant="@(ViewModel!.IsRunning && !ViewModel!.IsAborting ? Variant.Filled : Variant.Outlined)" Size="Size.Large">
        @if (ViewModel!.IsRunning)
        {
            <text>Optimizing...</text>
        }
        else
        {
            <text>Optimize</text>
        }
    </MudButton>
</MudPaper>
@* </MudToolBar> *@

<MudExpansionPanels>

    <MudExpansionPanel Text="Parameters" @bind-Expanded=@ShowParameters>
        <OptimizeParameters ViewModel="ViewModel" />
    </MudExpansionPanel>

    <MudExpansionPanel Text="Results" @bind-Expanded=@ShowResults>

        @* <div>
            <OptimizationResultsChart />
    </div> *@

        <MudGrid>
            <MudItem>
                @if (ViewModel!.OptimizationTask?.OptimizationMultiBatchJournal?.BatchDirectory != null)
                {
                    <div>
                        Dir:
                        <a href="@($"file:///{ViewModel!.OptimizationTask?.OptimizationMultiBatchJournal?.BatchDirectory}")">@ViewModel!.OptimizationTask?.OptimizationMultiBatchJournal?.BatchDirectory</a>

                    </div>
                }
            </MudItem>
            <MudItem>
                <div style="min-height: 220px;">
                    <h3>Selected Backtest</h3>

                </div>

            </MudItem>
        </MudGrid>
    </MudExpansionPanel>

    <MudExpansionPanel Text="Backtests" @bind-Expanded=@ShowBacktests>
        @* @if (ViewModel!.Backtests != null) *@
        @if (ViewModel.OptimizationTask?.OptimizationMultiBatchJournal?.ObservableCache.Items != null)
        {
            @* <MudDataGrid Items="ViewModel.Backtests.Items"> *@
            <MudDataGrid Items="ViewModel.OptimizationTask.OptimizationMultiBatchJournal.ObservableCache.Items" Virtualize="true" FixedHeader="true" Height="350px" SortMode="@_sortMode" Dense=true>
                <Columns>
                    <PropertyColumn Property="x => x.StringId" />
                    <PropertyColumn Property="x => x.Fitness" />
                    <PropertyColumn Property="x => x.AD" />
                </Columns>

            </MudDataGrid>
        }

    </MudExpansionPanel>

</MudExpansionPanels>

<MudExpansionPanel Text="Log" @bind-Expanded=@ShowLog>
    <TerminalView ViewModel="ViewModel!.LinesVM" />
</MudExpansionPanel>


